{"ast":null,"code":"var _jsxFileName = \"D:\\\\video-moderation-second\\\\video-moderation-second\\\\frontend\\\\src\\\\RagAnalysisPage.js\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Box, Button, Chip } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RagAnalysisPage({\n  ragAnalysis,\n  onBack\n}) {\n  if (!ragAnalysis) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"No RAG analysis data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onBack,\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), \" Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  const {\n    retrieved_docs\n  } = ragAnalysis;\n\n  // Helper: get icon and color for frame type\n  const getFrameIcon = category => {\n    if (!category) return null;\n    const cat = String(category).replace('_', ' ').toLowerCase();\n    if (['safe content', 'educational content', 'entertainment content', 'news content', 'tutorials & how-to', 'community & family-friendly', 'artistic & creative expression', 'positive social impact'].includes(cat)) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#43a047',\n          fontWeight: 'bold',\n          fontSize: 22\n        },\n        children: \"\\u2714\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#e53935',\n        fontWeight: 'bold',\n        fontSize: 22\n      },\n      children: \"\\u26A0\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Define positive categories\n  const positiveCategories = ['safe content', 'educational content', 'entertainment content', 'news content', 'tutorials & how-to', 'community & family-friendly', 'artistic & creative expression', 'positive social impact'];\n\n  // Group violations by type for summary, but skip positive categories\n  const violationTypes = {};\n  if (retrieved_docs && retrieved_docs.length > 0) {\n    retrieved_docs.forEach(doc => {\n      const cat = String(doc.category || '').toLowerCase();\n      if (positiveCategories.includes(cat)) return; // skip positive\n      if (!violationTypes[cat]) violationTypes[cat] = {\n        count: 0,\n        frames: [],\n        actions: new Set(),\n        reasons: new Set()\n      };\n      violationTypes[cat].count++;\n      violationTypes[cat].frames.push(doc);\n      if (doc.action_required) violationTypes[cat].actions.add(doc.action_required);\n      if (doc.policy && doc.policy.description) violationTypes[cat].reasons.add(doc.policy.description);\n      if (doc.reasoning) violationTypes[cat].reasons.add(doc.reasoning);\n    });\n  }\n  const totalFrames = retrieved_docs ? retrieved_docs.length : 0;\n  // Count safe frames and violation frames by their actual detected categories\n  let safeFrames = 0;\n  let violationFrames = 0;\n  if (retrieved_docs && retrieved_docs.length > 0) {\n    retrieved_docs.forEach(doc => {\n      const cat = String(doc.category || '').toLowerCase();\n      if (cat === 'safe content' || positiveCategories.includes(cat)) {\n        safeFrames++;\n      } else {\n        violationFrames++;\n      }\n    });\n  }\n  const complianceRate = totalFrames > 0 ? Math.round(safeFrames / totalFrames * 100) : 0;\n\n  // Build grouped summary lines and collect all unique explanations for compliant videos\n  let guidelineSummary = '';\n  let guidelineReasons = [];\n  let allExplanations = [];\n  if (violationFrames === 0) {\n    guidelineSummary = 'This video follows YouTube guidelines.';\n    guidelineReasons = ['No violations detected. Content is safe and suitable for YouTube.'];\n    // Collect all unique policy descriptions and reasoning from positive frames\n    if (retrieved_docs && retrieved_docs.length > 0) {\n      const explanationsSet = new Set();\n      retrieved_docs.forEach(doc => {\n        if (doc.policy && doc.policy.description) explanationsSet.add(doc.policy.description);\n        if (doc.reasoning) explanationsSet.add(doc.reasoning);\n      });\n      allExplanations = Array.from(explanationsSet);\n    }\n  } else {\n    guidelineSummary = 'This video does NOT follow YouTube guidelines.';\n    // Use RAG explanations (scraped policy data from backend/database) for summary\n    if (ragAnalysis && ragAnalysis.rag_explanations && Array.isArray(ragAnalysis.rag_explanations)) {\n      ragAnalysis.rag_explanations.forEach(exp => {\n        if (exp.policy) {\n          let examples = '';\n          if (Array.isArray(exp.policy.examples) && exp.policy.examples.length > 0) {\n            examples = '\\nExamples:';\n            exp.policy.examples.forEach((ex, i) => {\n              examples += `\\n  ${i + 1}. ${ex}`;\n            });\n          }\n          let actionRequired = exp.policy.action_required ? `\\nAction Required: ${exp.policy.action_required}` : '';\n          let line = '';\n          // Only use official YouTube policy description and examples from DB\n          line = `${exp.category}:\\n${exp.policy.description || ''}${examples}${actionRequired}`;\n          guidelineReasons.push(line);\n        }\n      });\n    } else {\n      // Fallback: previous logic if no RAG explanations\n      Object.entries(violationTypes).forEach(([cat, info]) => {\n        const doc = info.frames[0] || {};\n        let details = '';\n        if (doc.policy && doc.policy.description) details += doc.policy.description + ' ';\n        if (doc.personalized_reason) details += doc.personalized_reason + ' ';\n        guidelineReasons.push(`${cat.replace('_', ' ')}: Detected in ${info.count} frame${info.count > 1 ? 's' : ''}. ${details.trim()}`);\n      });\n      if (safeFrames > 0) {\n        const safeDoc = retrieved_docs.find(doc => {\n          const cat = String(doc.category || '').toLowerCase();\n          return cat === 'safe content' || positiveCategories.includes(cat);\n        }) || {};\n        let details = '';\n        if (safeDoc.policy && safeDoc.policy.description) details += safeDoc.policy.description + ' ';\n        guidelineReasons.push(`Safe: Detected in ${safeFrames} frame${safeFrames > 1 ? 's' : ''}. ${details.trim()}`);\n      }\n    }\n    if (guidelineReasons.length === 0) {\n      guidelineReasons = ['Violations detected, but no detailed policy explanation available.'];\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 5,\n      background: 'linear-gradient(120deg, #e3f2fd 60%, #fffde7 100%)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        sx: {\n          mr: 2,\n          fontWeight: 'bold',\n          borderRadius: 3\n        },\n        onClick: onBack,\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        color: \"primary\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"RAG Policy Violation Explanations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 900,\n        mb: 3,\n        boxShadow: 3,\n        borderRadius: 3,\n        p: 2,\n        background: violationFrames === 0 ? '#e8f5e9' : '#ffebee',\n        border: violationFrames === 0 ? undefined : '2px solid #e53935'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            fontWeight: 'bold',\n            color: violationFrames === 0 ? '#43a047' : '#e53935',\n            mb: 1\n          },\n          children: guidelineSummary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), guidelineReasons.map((reason, idx) => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mb: 0.5,\n            color: violationFrames === 0 ? '#43a047' : '#e53935',\n            fontWeight: 'bold'\n          },\n          children: reason\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)), violationFrames === 0 && allExplanations.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              fontWeight: 'bold',\n              color: '#1976d2',\n              mb: 1\n            },\n            children: \"Content Explanations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), allExplanations.map((exp, idx) => /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 0.5,\n              color: '#1976d2'\n            },\n            children: exp\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: `Compliance Rate: ${complianceRate}%`,\n            color: violationFrames === 0 ? 'success' : 'error',\n            sx: {\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Safe Frames: ${safeFrames}`,\n            color: \"success\",\n            sx: {\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Violations: ${violationFrames}`,\n            color: \"error\",\n            sx: {\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Total Frames: ${totalFrames}`,\n            color: \"primary\",\n            sx: {\n              fontWeight: 'bold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_c = RagAnalysisPage;\nexport default RagAnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"RagAnalysisPage\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Box","Button","Chip","ArrowBackIcon","jsxDEV","_jsxDEV","RagAnalysisPage","ragAnalysis","onBack","sx","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","mt","mr","retrieved_docs","getFrameIcon","category","cat","String","replace","toLowerCase","includes","style","fontWeight","fontSize","positiveCategories","violationTypes","length","forEach","doc","count","frames","actions","Set","reasons","push","action_required","add","policy","description","reasoning","totalFrames","safeFrames","violationFrames","complianceRate","Math","round","guidelineSummary","guidelineReasons","allExplanations","explanationsSet","Array","from","rag_explanations","isArray","exp","examples","ex","i","actionRequired","line","Object","entries","info","details","personalized_reason","trim","safeDoc","find","background","minHeight","display","alignItems","mb","borderRadius","maxWidth","boxShadow","border","undefined","map","reason","idx","gap","label","_c","$RefreshReg$"],"sources":["D:/video-moderation-second/video-moderation-second/frontend/src/RagAnalysisPage.js"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Box, Button, Chip } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nfunction RagAnalysisPage({ ragAnalysis, onBack }) {\n  if (!ragAnalysis) {\n    return (\n      <Box sx={{ p: 4 }}>\n        <Typography variant=\"h5\">No RAG analysis data available.</Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={onBack} sx={{ mt: 2 }}>\n          <ArrowBackIcon sx={{ mr: 1 }} /> Back\n        </Button>\n      </Box>\n    );\n  }\n\n  const { retrieved_docs } = ragAnalysis;\n\n  // Helper: get icon and color for frame type\n  const getFrameIcon = (category) => {\n    if (!category) return null;\n    const cat = String(category).replace('_', ' ').toLowerCase();\n    if ([\n      'safe content',\n      'educational content',\n      'entertainment content',\n      'news content',\n      'tutorials & how-to',\n      'community & family-friendly',\n      'artistic & creative expression',\n      'positive social impact'\n    ].includes(cat)) {\n      return <span style={{ color: '#43a047', fontWeight: 'bold', fontSize: 22 }}>✔️</span>;\n    }\n    return <span style={{ color: '#e53935', fontWeight: 'bold', fontSize: 22 }}>⚠️</span>;\n  };\n\n  // Define positive categories\n  const positiveCategories = [\n    'safe content',\n    'educational content',\n    'entertainment content',\n    'news content',\n    'tutorials & how-to',\n    'community & family-friendly',\n    'artistic & creative expression',\n    'positive social impact'\n  ];\n\n  // Group violations by type for summary, but skip positive categories\n  const violationTypes = {};\n  if (retrieved_docs && retrieved_docs.length > 0) {\n    retrieved_docs.forEach(doc => {\n      const cat = String(doc.category || '').toLowerCase();\n      if (positiveCategories.includes(cat)) return; // skip positive\n      if (!violationTypes[cat]) violationTypes[cat] = { count: 0, frames: [], actions: new Set(), reasons: new Set() };\n      violationTypes[cat].count++;\n      violationTypes[cat].frames.push(doc);\n      if (doc.action_required) violationTypes[cat].actions.add(doc.action_required);\n      if (doc.policy && doc.policy.description) violationTypes[cat].reasons.add(doc.policy.description);\n      if (doc.reasoning) violationTypes[cat].reasons.add(doc.reasoning);\n    });\n  }\n  const totalFrames = retrieved_docs ? retrieved_docs.length : 0;\n  // Count safe frames and violation frames by their actual detected categories\n  let safeFrames = 0;\n  let violationFrames = 0;\n  if (retrieved_docs && retrieved_docs.length > 0) {\n    retrieved_docs.forEach(doc => {\n      const cat = String(doc.category || '').toLowerCase();\n      if (cat === 'safe content' || positiveCategories.includes(cat)) {\n        safeFrames++;\n      } else {\n        violationFrames++;\n      }\n    });\n  }\n  const complianceRate = totalFrames > 0 ? Math.round((safeFrames / totalFrames) * 100) : 0;\n\n  // Build grouped summary lines and collect all unique explanations for compliant videos\n  let guidelineSummary = '';\n  let guidelineReasons = [];\n  let allExplanations = [];\n  if (violationFrames === 0) {\n    guidelineSummary = 'This video follows YouTube guidelines.';\n    guidelineReasons = ['No violations detected. Content is safe and suitable for YouTube.'];\n    // Collect all unique policy descriptions and reasoning from positive frames\n    if (retrieved_docs && retrieved_docs.length > 0) {\n      const explanationsSet = new Set();\n      retrieved_docs.forEach(doc => {\n        if (doc.policy && doc.policy.description) explanationsSet.add(doc.policy.description);\n        if (doc.reasoning) explanationsSet.add(doc.reasoning);\n      });\n      allExplanations = Array.from(explanationsSet);\n    }\n  } else {\n    guidelineSummary = 'This video does NOT follow YouTube guidelines.';\n    // Use RAG explanations (scraped policy data from backend/database) for summary\n    if (ragAnalysis && ragAnalysis.rag_explanations && Array.isArray(ragAnalysis.rag_explanations)) {\n      ragAnalysis.rag_explanations.forEach((exp) => {\n        if (exp.policy) {\n          let examples = '';\n          if (Array.isArray(exp.policy.examples) && exp.policy.examples.length > 0) {\n            examples = '\\nExamples:';\n            exp.policy.examples.forEach((ex, i) => {\n              examples += `\\n  ${i+1}. ${ex}`;\n            });\n          }\n          let actionRequired = exp.policy.action_required ? `\\nAction Required: ${exp.policy.action_required}` : '';\n          let line = '';\n          // Only use official YouTube policy description and examples from DB\n          line = `${exp.category}:\\n${exp.policy.description || ''}${examples}${actionRequired}`;\n          guidelineReasons.push(line);\n        }\n      });\n    } else {\n      // Fallback: previous logic if no RAG explanations\n      Object.entries(violationTypes).forEach(([cat, info]) => {\n        const doc = info.frames[0] || {};\n        let details = '';\n        if (doc.policy && doc.policy.description) details += doc.policy.description + ' ';\n        if (doc.personalized_reason) details += doc.personalized_reason + ' ';\n        guidelineReasons.push(\n          `${cat.replace('_', ' ')}: Detected in ${info.count} frame${info.count > 1 ? 's' : ''}. ${details.trim()}`\n        );\n      });\n      if (safeFrames > 0) {\n        const safeDoc = retrieved_docs.find(doc => {\n          const cat = String(doc.category || '').toLowerCase();\n          return cat === 'safe content' || positiveCategories.includes(cat);\n        }) || {};\n        let details = '';\n        if (safeDoc.policy && safeDoc.policy.description) details += safeDoc.policy.description + ' ';\n        guidelineReasons.push(\n          `Safe: Detected in ${safeFrames} frame${safeFrames > 1 ? 's' : ''}. ${details.trim()}`\n        );\n      }\n    }\n    if (guidelineReasons.length === 0) {\n      guidelineReasons = ['Violations detected, but no detailed policy explanation available.'];\n    }\n  }\n\n  return (\n    <Box sx={{ p: 5, background: 'linear-gradient(120deg, #e3f2fd 60%, #fffde7 100%)', minHeight: '100vh' }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n        <Button variant=\"outlined\" color=\"secondary\" sx={{ mr: 2, fontWeight: 'bold', borderRadius: 3 }} onClick={onBack}>\n          ← Back\n        </Button>\n        <Typography variant=\"h4\" color=\"primary\" sx={{ fontWeight: 'bold' }}>\n          RAG Policy Violation Explanations\n        </Typography>\n      </Box>\n      {/* YouTube-style guideline summary */}\n      <Card sx={{ maxWidth: 900, mb: 3, boxShadow: 3, borderRadius: 3, p: 2, background: violationFrames === 0 ? '#e8f5e9' : '#ffebee', border: violationFrames === 0 ? undefined : '2px solid #e53935' }}>\n        <CardContent>\n          <Typography variant=\"h6\" sx={{ fontWeight: 'bold', color: violationFrames === 0 ? '#43a047' : '#e53935', mb: 1 }}>\n            {guidelineSummary}\n          </Typography>\n          {guidelineReasons.map((reason, idx) => (\n            <Typography key={idx} variant=\"body2\" sx={{ mb: 0.5, color: violationFrames === 0 ? '#43a047' : '#e53935', fontWeight: 'bold' }}>{reason}</Typography>\n          ))}\n          {/* Prominent explanation section for compliant videos */}\n          {violationFrames === 0 && allExplanations.length > 0 && (\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: '#1976d2', mb: 1 }}>\n                Content Explanations:\n              </Typography>\n              {allExplanations.map((exp, idx) => (\n                <Typography key={idx} variant=\"body2\" sx={{ mb: 0.5, color: '#1976d2' }}>{exp}</Typography>\n              ))}\n            </Box>\n          )}\n          <Box sx={{ display: 'flex', gap: 2, mt: 2 }}>\n            <Chip label={`Compliance Rate: ${complianceRate}%`} color={violationFrames === 0 ? 'success' : 'error'} sx={{ fontWeight: 'bold' }} />\n            <Chip label={`Safe Frames: ${safeFrames}`} color=\"success\" sx={{ fontWeight: 'bold' }} />\n            <Chip label={`Violations: ${violationFrames}`} color=\"error\" sx={{ fontWeight: 'bold' }} />\n            <Chip label={`Total Frames: ${totalFrames}`} color=\"primary\" sx={{ fontWeight: 'bold' }} />\n          </Box>\n        </CardContent>\n      </Card>\n      {/* Frame-by-frame cards */}\n  {/* Frame-by-frame cards removed from main dashboard as requested */}\n    </Box>\n  );\n}\n\nexport default RagAnalysisPage;\n\n\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,QAAQ,eAAe;AAChF,OAAOC,aAAa,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,eAAeA,CAAC;EAAEC,WAAW;EAAEC;AAAO,CAAC,EAAE;EAChD,IAAI,CAACD,WAAW,EAAE;IAChB,oBACEF,OAAA,CAACL,GAAG;MAACS,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAE,CAAE;MAAAC,QAAA,gBAChBN,OAAA,CAACN,UAAU;QAACa,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAA+B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACrEX,OAAA,CAACJ,MAAM;QAACW,OAAO,EAAC,WAAW;QAACK,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEV,MAAO;QAACC,EAAE,EAAE;UAAEU,EAAE,EAAE;QAAE,CAAE;QAAAR,QAAA,gBACzEN,OAAA,CAACF,aAAa;UAACM,EAAE,EAAE;YAAEW,EAAE,EAAE;UAAE;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,SAClC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,MAAM;IAAEK;EAAe,CAAC,GAAGd,WAAW;;EAEtC;EACA,MAAMe,YAAY,GAAIC,QAAQ,IAAK;IACjC,IAAI,CAACA,QAAQ,EAAE,OAAO,IAAI;IAC1B,MAAMC,GAAG,GAAGC,MAAM,CAACF,QAAQ,CAAC,CAACG,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC;IAC5D,IAAI,CACF,cAAc,EACd,qBAAqB,EACrB,uBAAuB,EACvB,cAAc,EACd,oBAAoB,EACpB,6BAA6B,EAC7B,gCAAgC,EAChC,wBAAwB,CACzB,CAACC,QAAQ,CAACJ,GAAG,CAAC,EAAE;MACf,oBAAOnB,OAAA;QAAMwB,KAAK,EAAE;UAAEZ,KAAK,EAAE,SAAS;UAAEa,UAAU,EAAE,MAAM;UAAEC,QAAQ,EAAE;QAAG,CAAE;QAAApB,QAAA,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACvF;IACA,oBAAOX,OAAA;MAAMwB,KAAK,EAAE;QAAEZ,KAAK,EAAE,SAAS;QAAEa,UAAU,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAApB,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACvF,CAAC;;EAED;EACA,MAAMgB,kBAAkB,GAAG,CACzB,cAAc,EACd,qBAAqB,EACrB,uBAAuB,EACvB,cAAc,EACd,oBAAoB,EACpB,6BAA6B,EAC7B,gCAAgC,EAChC,wBAAwB,CACzB;;EAED;EACA,MAAMC,cAAc,GAAG,CAAC,CAAC;EACzB,IAAIZ,cAAc,IAAIA,cAAc,CAACa,MAAM,GAAG,CAAC,EAAE;IAC/Cb,cAAc,CAACc,OAAO,CAACC,GAAG,IAAI;MAC5B,MAAMZ,GAAG,GAAGC,MAAM,CAACW,GAAG,CAACb,QAAQ,IAAI,EAAE,CAAC,CAACI,WAAW,CAAC,CAAC;MACpD,IAAIK,kBAAkB,CAACJ,QAAQ,CAACJ,GAAG,CAAC,EAAE,OAAO,CAAC;MAC9C,IAAI,CAACS,cAAc,CAACT,GAAG,CAAC,EAAES,cAAc,CAACT,GAAG,CAAC,GAAG;QAAEa,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE,EAAE;QAAEC,OAAO,EAAE,IAAIC,GAAG,CAAC,CAAC;QAAEC,OAAO,EAAE,IAAID,GAAG,CAAC;MAAE,CAAC;MAChHP,cAAc,CAACT,GAAG,CAAC,CAACa,KAAK,EAAE;MAC3BJ,cAAc,CAACT,GAAG,CAAC,CAACc,MAAM,CAACI,IAAI,CAACN,GAAG,CAAC;MACpC,IAAIA,GAAG,CAACO,eAAe,EAAEV,cAAc,CAACT,GAAG,CAAC,CAACe,OAAO,CAACK,GAAG,CAACR,GAAG,CAACO,eAAe,CAAC;MAC7E,IAAIP,GAAG,CAACS,MAAM,IAAIT,GAAG,CAACS,MAAM,CAACC,WAAW,EAAEb,cAAc,CAACT,GAAG,CAAC,CAACiB,OAAO,CAACG,GAAG,CAACR,GAAG,CAACS,MAAM,CAACC,WAAW,CAAC;MACjG,IAAIV,GAAG,CAACW,SAAS,EAAEd,cAAc,CAACT,GAAG,CAAC,CAACiB,OAAO,CAACG,GAAG,CAACR,GAAG,CAACW,SAAS,CAAC;IACnE,CAAC,CAAC;EACJ;EACA,MAAMC,WAAW,GAAG3B,cAAc,GAAGA,cAAc,CAACa,MAAM,GAAG,CAAC;EAC9D;EACA,IAAIe,UAAU,GAAG,CAAC;EAClB,IAAIC,eAAe,GAAG,CAAC;EACvB,IAAI7B,cAAc,IAAIA,cAAc,CAACa,MAAM,GAAG,CAAC,EAAE;IAC/Cb,cAAc,CAACc,OAAO,CAACC,GAAG,IAAI;MAC5B,MAAMZ,GAAG,GAAGC,MAAM,CAACW,GAAG,CAACb,QAAQ,IAAI,EAAE,CAAC,CAACI,WAAW,CAAC,CAAC;MACpD,IAAIH,GAAG,KAAK,cAAc,IAAIQ,kBAAkB,CAACJ,QAAQ,CAACJ,GAAG,CAAC,EAAE;QAC9DyB,UAAU,EAAE;MACd,CAAC,MAAM;QACLC,eAAe,EAAE;MACnB;IACF,CAAC,CAAC;EACJ;EACA,MAAMC,cAAc,GAAGH,WAAW,GAAG,CAAC,GAAGI,IAAI,CAACC,KAAK,CAAEJ,UAAU,GAAGD,WAAW,GAAI,GAAG,CAAC,GAAG,CAAC;;EAEzF;EACA,IAAIM,gBAAgB,GAAG,EAAE;EACzB,IAAIC,gBAAgB,GAAG,EAAE;EACzB,IAAIC,eAAe,GAAG,EAAE;EACxB,IAAIN,eAAe,KAAK,CAAC,EAAE;IACzBI,gBAAgB,GAAG,wCAAwC;IAC3DC,gBAAgB,GAAG,CAAC,mEAAmE,CAAC;IACxF;IACA,IAAIlC,cAAc,IAAIA,cAAc,CAACa,MAAM,GAAG,CAAC,EAAE;MAC/C,MAAMuB,eAAe,GAAG,IAAIjB,GAAG,CAAC,CAAC;MACjCnB,cAAc,CAACc,OAAO,CAACC,GAAG,IAAI;QAC5B,IAAIA,GAAG,CAACS,MAAM,IAAIT,GAAG,CAACS,MAAM,CAACC,WAAW,EAAEW,eAAe,CAACb,GAAG,CAACR,GAAG,CAACS,MAAM,CAACC,WAAW,CAAC;QACrF,IAAIV,GAAG,CAACW,SAAS,EAAEU,eAAe,CAACb,GAAG,CAACR,GAAG,CAACW,SAAS,CAAC;MACvD,CAAC,CAAC;MACFS,eAAe,GAAGE,KAAK,CAACC,IAAI,CAACF,eAAe,CAAC;IAC/C;EACF,CAAC,MAAM;IACLH,gBAAgB,GAAG,gDAAgD;IACnE;IACA,IAAI/C,WAAW,IAAIA,WAAW,CAACqD,gBAAgB,IAAIF,KAAK,CAACG,OAAO,CAACtD,WAAW,CAACqD,gBAAgB,CAAC,EAAE;MAC9FrD,WAAW,CAACqD,gBAAgB,CAACzB,OAAO,CAAE2B,GAAG,IAAK;QAC5C,IAAIA,GAAG,CAACjB,MAAM,EAAE;UACd,IAAIkB,QAAQ,GAAG,EAAE;UACjB,IAAIL,KAAK,CAACG,OAAO,CAACC,GAAG,CAACjB,MAAM,CAACkB,QAAQ,CAAC,IAAID,GAAG,CAACjB,MAAM,CAACkB,QAAQ,CAAC7B,MAAM,GAAG,CAAC,EAAE;YACxE6B,QAAQ,GAAG,aAAa;YACxBD,GAAG,CAACjB,MAAM,CAACkB,QAAQ,CAAC5B,OAAO,CAAC,CAAC6B,EAAE,EAAEC,CAAC,KAAK;cACrCF,QAAQ,IAAI,OAAOE,CAAC,GAAC,CAAC,KAAKD,EAAE,EAAE;YACjC,CAAC,CAAC;UACJ;UACA,IAAIE,cAAc,GAAGJ,GAAG,CAACjB,MAAM,CAACF,eAAe,GAAG,sBAAsBmB,GAAG,CAACjB,MAAM,CAACF,eAAe,EAAE,GAAG,EAAE;UACzG,IAAIwB,IAAI,GAAG,EAAE;UACb;UACAA,IAAI,GAAG,GAAGL,GAAG,CAACvC,QAAQ,MAAMuC,GAAG,CAACjB,MAAM,CAACC,WAAW,IAAI,EAAE,GAAGiB,QAAQ,GAAGG,cAAc,EAAE;UACtFX,gBAAgB,CAACb,IAAI,CAACyB,IAAI,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAC,MAAM,CAACC,OAAO,CAACpC,cAAc,CAAC,CAACE,OAAO,CAAC,CAAC,CAACX,GAAG,EAAE8C,IAAI,CAAC,KAAK;QACtD,MAAMlC,GAAG,GAAGkC,IAAI,CAAChC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAChC,IAAIiC,OAAO,GAAG,EAAE;QAChB,IAAInC,GAAG,CAACS,MAAM,IAAIT,GAAG,CAACS,MAAM,CAACC,WAAW,EAAEyB,OAAO,IAAInC,GAAG,CAACS,MAAM,CAACC,WAAW,GAAG,GAAG;QACjF,IAAIV,GAAG,CAACoC,mBAAmB,EAAED,OAAO,IAAInC,GAAG,CAACoC,mBAAmB,GAAG,GAAG;QACrEjB,gBAAgB,CAACb,IAAI,CACnB,GAAGlB,GAAG,CAACE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,iBAAiB4C,IAAI,CAACjC,KAAK,SAASiC,IAAI,CAACjC,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,KAAKkC,OAAO,CAACE,IAAI,CAAC,CAAC,EAC1G,CAAC;MACH,CAAC,CAAC;MACF,IAAIxB,UAAU,GAAG,CAAC,EAAE;QAClB,MAAMyB,OAAO,GAAGrD,cAAc,CAACsD,IAAI,CAACvC,GAAG,IAAI;UACzC,MAAMZ,GAAG,GAAGC,MAAM,CAACW,GAAG,CAACb,QAAQ,IAAI,EAAE,CAAC,CAACI,WAAW,CAAC,CAAC;UACpD,OAAOH,GAAG,KAAK,cAAc,IAAIQ,kBAAkB,CAACJ,QAAQ,CAACJ,GAAG,CAAC;QACnE,CAAC,CAAC,IAAI,CAAC,CAAC;QACR,IAAI+C,OAAO,GAAG,EAAE;QAChB,IAAIG,OAAO,CAAC7B,MAAM,IAAI6B,OAAO,CAAC7B,MAAM,CAACC,WAAW,EAAEyB,OAAO,IAAIG,OAAO,CAAC7B,MAAM,CAACC,WAAW,GAAG,GAAG;QAC7FS,gBAAgB,CAACb,IAAI,CACnB,qBAAqBO,UAAU,SAASA,UAAU,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,KAAKsB,OAAO,CAACE,IAAI,CAAC,CAAC,EACtF,CAAC;MACH;IACF;IACA,IAAIlB,gBAAgB,CAACrB,MAAM,KAAK,CAAC,EAAE;MACjCqB,gBAAgB,GAAG,CAAC,oEAAoE,CAAC;IAC3F;EACF;EAEA,oBACElD,OAAA,CAACL,GAAG;IAACS,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEkE,UAAU,EAAE,oDAAoD;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAlE,QAAA,gBACtGN,OAAA,CAACL,GAAG;MAACS,EAAE,EAAE;QAAEqE,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAArE,QAAA,gBACxDN,OAAA,CAACJ,MAAM;QAACW,OAAO,EAAC,UAAU;QAACK,KAAK,EAAC,WAAW;QAACR,EAAE,EAAE;UAAEW,EAAE,EAAE,CAAC;UAAEU,UAAU,EAAE,MAAM;UAAEmD,YAAY,EAAE;QAAE,CAAE;QAAC/D,OAAO,EAAEV,MAAO;QAAAG,QAAA,EAAC;MAElH;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTX,OAAA,CAACN,UAAU;QAACa,OAAO,EAAC,IAAI;QAACK,KAAK,EAAC,SAAS;QAACR,EAAE,EAAE;UAAEqB,UAAU,EAAE;QAAO,CAAE;QAAAnB,QAAA,EAAC;MAErE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAENX,OAAA,CAACR,IAAI;MAACY,EAAE,EAAE;QAAEyE,QAAQ,EAAE,GAAG;QAAEF,EAAE,EAAE,CAAC;QAAEG,SAAS,EAAE,CAAC;QAAEF,YAAY,EAAE,CAAC;QAAEvE,CAAC,EAAE,CAAC;QAAEkE,UAAU,EAAE1B,eAAe,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;QAAEkC,MAAM,EAAElC,eAAe,KAAK,CAAC,GAAGmC,SAAS,GAAG;MAAoB,CAAE;MAAA1E,QAAA,eAClMN,OAAA,CAACP,WAAW;QAAAa,QAAA,gBACVN,OAAA,CAACN,UAAU;UAACa,OAAO,EAAC,IAAI;UAACH,EAAE,EAAE;YAAEqB,UAAU,EAAE,MAAM;YAAEb,KAAK,EAAEiC,eAAe,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;YAAE8B,EAAE,EAAE;UAAE,CAAE;UAAArE,QAAA,EAC9G2C;QAAgB;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,EACZuC,gBAAgB,CAAC+B,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,kBAChCnF,OAAA,CAACN,UAAU;UAAWa,OAAO,EAAC,OAAO;UAACH,EAAE,EAAE;YAAEuE,EAAE,EAAE,GAAG;YAAE/D,KAAK,EAAEiC,eAAe,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;YAAEpB,UAAU,EAAE;UAAO,CAAE;UAAAnB,QAAA,EAAE4E;QAAM,GAAvHC,GAAG;UAAA3E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiI,CACtJ,CAAC,EAEDkC,eAAe,KAAK,CAAC,IAAIM,eAAe,CAACtB,MAAM,GAAG,CAAC,iBAClD7B,OAAA,CAACL,GAAG;UAACS,EAAE,EAAE;YAAEU,EAAE,EAAE;UAAE,CAAE;UAAAR,QAAA,gBACjBN,OAAA,CAACN,UAAU;YAACa,OAAO,EAAC,WAAW;YAACH,EAAE,EAAE;cAAEqB,UAAU,EAAE,MAAM;cAAEb,KAAK,EAAE,SAAS;cAAE+D,EAAE,EAAE;YAAE,CAAE;YAAArE,QAAA,EAAC;UAErF;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EACZwC,eAAe,CAAC8B,GAAG,CAAC,CAACxB,GAAG,EAAE0B,GAAG,kBAC5BnF,OAAA,CAACN,UAAU;YAAWa,OAAO,EAAC,OAAO;YAACH,EAAE,EAAE;cAAEuE,EAAE,EAAE,GAAG;cAAE/D,KAAK,EAAE;YAAU,CAAE;YAAAN,QAAA,EAAEmD;UAAG,GAA5D0B,GAAG;YAAA3E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAsE,CAC3F,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,eACDX,OAAA,CAACL,GAAG;UAACS,EAAE,EAAE;YAAEqE,OAAO,EAAE,MAAM;YAAEW,GAAG,EAAE,CAAC;YAAEtE,EAAE,EAAE;UAAE,CAAE;UAAAR,QAAA,gBAC1CN,OAAA,CAACH,IAAI;YAACwF,KAAK,EAAE,oBAAoBvC,cAAc,GAAI;YAAClC,KAAK,EAAEiC,eAAe,KAAK,CAAC,GAAG,SAAS,GAAG,OAAQ;YAACzC,EAAE,EAAE;cAAEqB,UAAU,EAAE;YAAO;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtIX,OAAA,CAACH,IAAI;YAACwF,KAAK,EAAE,gBAAgBzC,UAAU,EAAG;YAAChC,KAAK,EAAC,SAAS;YAACR,EAAE,EAAE;cAAEqB,UAAU,EAAE;YAAO;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzFX,OAAA,CAACH,IAAI;YAACwF,KAAK,EAAE,eAAexC,eAAe,EAAG;YAACjC,KAAK,EAAC,OAAO;YAACR,EAAE,EAAE;cAAEqB,UAAU,EAAE;YAAO;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3FX,OAAA,CAACH,IAAI;YAACwF,KAAK,EAAE,iBAAiB1C,WAAW,EAAG;YAAC/B,KAAK,EAAC,SAAS;YAACR,EAAE,EAAE;cAAEqB,UAAU,EAAE;YAAO;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGJ,CAAC;AAEV;AAAC2E,EAAA,GArLQrF,eAAe;AAuLxB,eAAeA,eAAe;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}