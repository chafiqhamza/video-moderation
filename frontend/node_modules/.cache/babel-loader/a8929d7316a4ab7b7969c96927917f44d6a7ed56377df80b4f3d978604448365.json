{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ProjetStage\\\\frontend\\\\src\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './ProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProgressBar() {\n  _s();\n  const [current, setCurrent] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    const ws = new window.WebSocket(\"ws://localhost:8000/ws/progress\");\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"progress\") {\n        setCurrent(data.current);\n        setTotal(data.total);\n        setActive(data.active);\n      }\n    };\n    ws.onclose = () => setActive(false);\n    return () => ws.close();\n  }, []);\n  const percent = total > 0 ? Math.round(current / total * 100) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-fill\",\n        style: {\n          width: percent + \"%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-text\",\n      children: active ? `Analyse des frames : ${current} / ${total} (${percent}%)` : total > 0 ? \"Analyse terminée !\" : \"En attente d'analyse...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ProgressBar, \"ZjRYQ2S3Ua2DVla62eGLGHDDlYQ=\");\n_c = ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProgressBar","_s","current","setCurrent","total","setTotal","active","setActive","ws","window","WebSocket","onmessage","event","data","JSON","parse","type","onclose","close","percent","Math","round","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ProjetStage/frontend/src/ProgressBar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './ProgressBar.css';\r\n\r\nexport default function ProgressBar() {\r\n  const [current, setCurrent] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const ws = new window.WebSocket(\"ws://localhost:8000/ws/progress\");\r\n    ws.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === \"progress\") {\r\n        setCurrent(data.current);\r\n        setTotal(data.total);\r\n        setActive(data.active);\r\n      }\r\n    };\r\n    ws.onclose = () => setActive(false);\r\n    return () => ws.close();\r\n  }, []);\r\n\r\n  const percent = total > 0 ? Math.round((current / total) * 100) : 0;\r\n\r\n  return (\r\n    <div className=\"progress-container\">\r\n      <div className=\"progress-bar\">\r\n        <div className=\"progress-fill\" style={{ width: percent + \"%\" }}></div>\r\n      </div>\r\n      <div className=\"progress-text\">\r\n        {active\r\n          ? `Analyse des frames : ${current} / ${total} (${percent}%)`\r\n          : total > 0\r\n          ? \"Analyse terminée !\"\r\n          : \"En attente d'analyse...\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,MAAMY,EAAE,GAAG,IAAIC,MAAM,CAACC,SAAS,CAAC,iCAAiC,CAAC;IAClEF,EAAE,CAACG,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnC,IAAIA,IAAI,CAACG,IAAI,KAAK,UAAU,EAAE;QAC5Bb,UAAU,CAACU,IAAI,CAACX,OAAO,CAAC;QACxBG,QAAQ,CAACQ,IAAI,CAACT,KAAK,CAAC;QACpBG,SAAS,CAACM,IAAI,CAACP,MAAM,CAAC;MACxB;IACF,CAAC;IACDE,EAAE,CAACS,OAAO,GAAG,MAAMV,SAAS,CAAC,KAAK,CAAC;IACnC,OAAO,MAAMC,EAAE,CAACU,KAAK,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGf,KAAK,GAAG,CAAC,GAAGgB,IAAI,CAACC,KAAK,CAAEnB,OAAO,GAAGE,KAAK,GAAI,GAAG,CAAC,GAAG,CAAC;EAEnE,oBACEL,OAAA;IAAKuB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCxB,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BxB,OAAA;QAAKuB,SAAS,EAAC,eAAe;QAACE,KAAK,EAAE;UAAEC,KAAK,EAAEN,OAAO,GAAG;QAAI;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eACN9B,OAAA;MAAKuB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BjB,MAAM,GACH,wBAAwBJ,OAAO,MAAME,KAAK,KAAKe,OAAO,IAAI,GAC1Df,KAAK,GAAG,CAAC,GACT,oBAAoB,GACpB;IAAyB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CAnCuBD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}